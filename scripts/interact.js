const hre = require('hardhat')

async function main() {
	const [owner, organization, donor] = await hre.ethers.getSigners()

	console.log('Owner address:', owner.address)
	console.log('Organization address:', organization.address)
	console.log('Donor address:', donor.address)

	const registry = await hre.ethers.getContractAt(
		'PlatformRegistry',
		'0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512'
	)

	const isVerified = await registry.verifiedOrganizations(organization.address)
	if (!isVerified) {
		console.log('‚ÑπÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞. –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä—É–µ–º...')
		const txVerify = await registry
			.connect(owner)
			.verifyOrganization(organization.address, true)
		await txVerify.wait()
		console.log(`‚úÖ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization.address} —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞`)
	} else {
		console.log(`‚ÑπÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ${organization.address} —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–∞`)
	}

	const goalInETH = '0.5'
	const durationInSeconds = 86400

	console.log('üöÄ –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é...')

	const txCreate = await registry
		.connect(organization)
		.createCampaign(hre.ethers.parseEther(goalInETH), durationInSeconds)

	const receipt = await txCreate.wait()

	const event = receipt.logs.find(
		log =>
			log.topics[0] ===
			hre.ethers.id('CampaignCreated(uint256,address,address)')
	)

	if (!event) {
		throw new Error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ CampaignCreated')
	}

	const campaignCreatedEvent = registry.interface.parseLog(event)
	const campaignAddress = campaignCreatedEvent.args.campaignAddress

	console.log('‚úÖ –ö–∞–º–ø–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!')
	console.log('ID –∫–∞–º–ø–∞–Ω–∏–∏:', campaignCreatedEvent.args.campaignId.toString())
	console.log('–ê–¥—Ä–µ—Å –∫–∞–º–ø–∞–Ω–∏–∏:', campaignAddress)

	const campaign = await hre.ethers.getContractAt(
		'CharityCampaign',
		campaignAddress,
		donor
	)

	const donationAmount = 1000000

	console.log(`üí∏ –î–æ–Ω–æ—Ä ${donor.address} –¥–µ–ª–∞–µ—Ç –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ...`)

	const donorBalance = await hre.ethers.provider.getBalance(donor.address)
	console.log(`–ë–∞–ª–∞–Ω—Å –¥–æ–Ω–æ—Ä–∞: ${hre.ethers.formatEther(donorBalance)} ETH`)

	const campaignBalanceBefore = await hre.ethers.provider.getBalance(
		campaignAddress
	)
	console.log(
		`–ë–∞–ª–∞–Ω—Å –∫–∞–º–ø–∞–Ω–∏–∏ –¥–æ –¥–æ–Ω–∞—Ç–∞: ${hre.ethers.formatEther(
			campaignBalanceBefore
		)} ETH (–∫–æ–º–∏—Å—Å–∏—è —É–∂–µ —É—á—Ç–µ–Ω–∞)`
	)

	const txDonate = await campaign.donate({
		value: donationAmount,
	})

	await txDonate.wait()

	console.log(
		`‚úÖ –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å—É–º–º—É ${donationAmount} ETH —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`
	)
	const campaignBalanceAfter = await hre.ethers.provider.getBalance(
		campaignAddress
	)
	console.log(
		`–ë–∞–ª–∞–Ω—Å –∫–∞–º–ø–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –¥–æ–Ω–∞—Ç–∞: ${hre.ethers.formatEther(
			campaignBalanceAfter
		)} ETH`
	)
}

main()
	.then(() => process.exit(0))
	.catch(error => {
		console.error('‚ùå –û—à–∏–±–∫–∞:', error)
		process.exit(1)
	})
